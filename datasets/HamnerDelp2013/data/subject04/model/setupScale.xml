<?xml version="1.0" encoding="UTF-8"?>
<OpenSimDocument Version="20200">
	<ScaleTool name="subject04_scaled">
		<defaults>
			<ControlLinear name="default">
				<is_model_control> true </is_model_control>
				<extrapolate> true </extrapolate>
				<default_min>      -1.00000000 </default_min>
				<default_max>       1.00000000 </default_max>
				<filter_on> false </filter_on>
				<use_steps> false </use_steps>
				<x_nodes/>
				<min_nodes/>
				<max_nodes/>
				<kp>     100.00000000 </kp>
				<kv>      20.00000000 </kv>
			</ControlLinear>
			<CoordinateActuator name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control> -infinity </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control> infinity </max_control>
				<coordinate> Unassigned </coordinate>
				<optimal_force>     300.00000000 </optimal_force>
			</CoordinateActuator>
			<PointActuator name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control> -infinity </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control> infinity </max_control>
				<body>  </body>
				<point>       0.00000000       0.00000000       0.00000000 </point>
				<point_is_global> false </point_is_global>
				<direction>      -1.00000000      -0.00000000      -0.00000000 </direction>
				<force_is_global> true </force_is_global>
				<optimal_force>    1000.00000000 </optimal_force>
			</PointActuator>
			<TorqueActuator name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control> -infinity </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control> infinity </max_control>
				<bodyA> Unassigned </bodyA>
				<bodyB> Unassigned </bodyB>
				<torque_is_global> true </torque_is_global>
				<axis>      -1.00000000      -0.00000000      -0.00000000 </axis>
				<optimal_force>       1.00000000 </optimal_force>
			</TorqueActuator>
			<Thelen2003Muscle name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control>       0.01000000 </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control>       1.00000000 </max_control>
				<GeometryPath name="">
					<PathPointSet name="">
						<objects/>
						<groups/>
					</PathPointSet>
					<VisibleObject name="">
						<!--Set of geometry files and associated attributes, allow .vtp, .stl,
						    .obj-->
						<GeometrySet name="">
							<objects/>
							<groups/>
						</GeometrySet>
						<!--Three scale factors for display purposes: scaleX scaleY scaleZ-->
						<scale_factors>       1.00000000       1.00000000       1.00000000 </scale_factors>
						<!--transform relative to owner specified as 3 rotations (rad) followed by
						    3 translations rX rY rZ tx ty tz-->
						<transform>      -0.00000000       0.00000000      -0.00000000       0.00000000       0.00000000       0.00000000 </transform>
						<!--Whether to show a coordinate frame-->
						<show_axes> false </show_axes>
						<!--Display Pref. 0:Hide 1:Wire 3:Flat 4:Shaded Can be overriden for
						    individual geometries-->
						<display_preference> 4 </display_preference>
					</VisibleObject>
					<PathWrapSet name="">
						<objects/>
						<groups/>
					</PathWrapSet>
				</GeometryPath>
				<!--maximum isometric force of the muscle fibers-->
				<max_isometric_force>     546.00000000 </max_isometric_force>
				<!--optimal length of the muscle fibers-->
				<optimal_fiber_length>       0.05350000 </optimal_fiber_length>
				<!--resting length of the tendon-->
				<tendon_slack_length>       0.07800000 </tendon_slack_length>
				<!--angle between tendon and fibers at optimal fiber length-->
				<pennation_angle>       0.00000000 </pennation_angle>
				<!--time constant for ramping up of muscle activation-->
				<activation_time_constant>       0.01000000 </activation_time_constant>
				<!--time constant for ramping down of muscle activation-->
				<deactivation_time_constant>       0.04000000 </deactivation_time_constant>
				<!--maximum contraction velocity at full activation in fiber lengths per
				    second-->
				<Vmax>      10.00000000 </Vmax>
				<!--maximum contraction velocity at low activation in fiber lengths per
				    second-->
				<Vmax0>       5.00000000 </Vmax0>
				<!--tendon strain due to maximum isometric muscle force-->
				<FmaxTendonStrain>       0.03300000 </FmaxTendonStrain>
				<!--passive muscle strain due to maximum isometric muscle force-->
				<FmaxMuscleStrain>       0.60000000 </FmaxMuscleStrain>
				<!--shape factor for Gaussian active muscle force-length relationship-->
				<KshapeActive>       0.50000000 </KshapeActive>
				<!--exponential shape factor for passive force-length relationship-->
				<KshapePassive>       4.00000000 </KshapePassive>
				<!--passive damping in the force-velocity relationship-->
				<damping>       0.05000000 </damping>
				<!--force-velocity shape factor-->
				<Af>       0.30000000 </Af>
				<!--maximum normalized lengthening force-->
				<Flen>       1.80000000 </Flen>
			</Thelen2003Muscle>
			<Schutte1993Muscle name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control>       0.01000000 </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control>       1.00000000 </max_control>
				<GeometryPath name="">
					<PathPointSet name="">
						<objects/>
						<groups/>
					</PathPointSet>
					<VisibleObject name="">
						<!--Set of geometry files and associated attributes, allow .vtp, .stl,
						    .obj-->
						<GeometrySet name="">
							<objects/>
							<groups/>
						</GeometrySet>
						<!--Three scale factors for display purposes: scaleX scaleY scaleZ-->
						<scale_factors>       1.00000000       1.00000000       1.00000000 </scale_factors>
						<!--transform relative to owner specified as 3 rotations (rad) followed by
						    3 translations rX rY rZ tx ty tz-->
						<transform>      -0.00000000       0.00000000      -0.00000000       0.00000000       0.00000000       0.00000000 </transform>
						<!--Whether to show a coordinate frame-->
						<show_axes> false </show_axes>
						<!--Display Pref. 0:Hide 1:Wire 3:Flat 4:Shaded Can be overriden for
						    individual geometries-->
						<display_preference> 4 </display_preference>
					</VisibleObject>
					<PathWrapSet name="">
						<objects/>
						<groups/>
					</PathWrapSet>
				</GeometryPath>
				<!--Scale factor for normalizing time-->
				<time_scale>       0.10000000 </time_scale>
				<!--Parameter used in time constant of ramping up of muscle force-->
				<activation1>       0.00000000 </activation1>
				<!--Parameter used in time constant of ramping up and ramping down of
				    muscle force-->
				<activation2>       0.00000000 </activation2>
				<!--Maximum isometric force that the fibers can generate-->
				<max_isometric_force>       0.00000000 </max_isometric_force>
				<!--Optimal length of the muscle fibers-->
				<optimal_fiber_length>       0.00000000 </optimal_fiber_length>
				<!--Resting length of the tendon-->
				<tendon_slack_length>       0.00000000 </tendon_slack_length>
				<!--Angle between tendon and fibers at optimal fiber length-->
				<pennation_angle>       0.00000000 </pennation_angle>
				<!--Maximum contraction velocity of the fibers, in optimal fiberlengths
				    per second-->
				<max_contraction_velocity>      10.00000000 </max_contraction_velocity>
				<!--Damping factor related to maximum contraction velocity-->
				<damping>       0.05000000 </damping>
				<!--Function representing force-length behavior of tendon-->
				<tendon_force_length_curve>
					<NaturalCubicSpline name="">
						<x>     -10.00000000      -0.00200000      -0.00100000       0.00000000       0.00131000       0.00281000       0.00431000       0.00581000       0.00731000       0.00881000       0.01030000       0.01180000       0.01230000       9.20000000       9.20100000       9.20200000      20.00000000 </x>
						<y>       0.00000000       0.00000000       0.00000000       0.00000000       0.01080000       0.02570000       0.04350000       0.06520000       0.09150000       0.12300000       0.16100000       0.20800000       0.22700000     345.00000000     345.00000000     345.00000000     345.00000000 </y>
					</NaturalCubicSpline>
				</tendon_force_length_curve>
				<!--Function representing active force-length behavior of muscle fibers-->
				<active_force_length_curve>
					<NaturalCubicSpline name="">
						<x>      -5.30769200      -4.30769200      -1.92307700      -0.88461500      -0.26923100       0.23076900       0.46153800       0.52725000       0.62875000       0.71875000       0.86125000       1.04500000       1.21750000       1.43875000       1.50000000       1.61538500       2.00000000       2.96153800       3.69230800       5.46153800       9.90190200 </x>
						<y>       0.01218800       0.02189900       0.03646600       0.05249300       0.07531200       0.11415800       0.15785900       0.22666700       0.63666700       0.85666700       0.95000000       0.99333300       0.77000000       0.24666700       0.19382100       0.13325200       0.07268300       0.04441700       0.03634100       0.02189900       0.00733200 </y>
					</NaturalCubicSpline>
				</active_force_length_curve>
				<!--Function representing passive force-length behavior of muscle fibers-->
				<passive_force_length_curve>
					<NaturalCubicSpline name="">
						<x>      -5.00000000       0.99800000       0.99900000       1.00000000       1.10000000       1.20000000       1.30000000       1.40000000       1.50000000       1.60000000       1.60100000       1.60200000       5.00000000 </x>
						<y>       0.00000000       0.00000000       0.00000000       0.00000000       0.03500000       0.12000000       0.26000000       0.55000000       1.17000000       2.00000000       2.00000000       2.00000000       2.00000000 </y>
					</NaturalCubicSpline>
				</passive_force_length_curve>
			</Schutte1993Muscle>
			<Delp1990Muscle name="default">
				<isDisabled> false </isDisabled>
				<!--Minimum allowed value for control signal. Used primarily when solving
				    for control values-->
				<min_control>       0.01000000 </min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving
				    for control values-->
				<max_control>       1.00000000 </max_control>
				<GeometryPath name="">
					<PathPointSet name="">
						<objects/>
						<groups/>
					</PathPointSet>
					<VisibleObject name="">
						<!--Set of geometry files and associated attributes, allow .vtp, .stl,
						    .obj-->
						<GeometrySet name="">
							<objects/>
							<groups/>
						</GeometrySet>
						<!--Three scale factors for display purposes: scaleX scaleY scaleZ-->
						<scale_factors>       1.00000000       1.00000000       1.00000000 </scale_factors>
						<!--transform relative to owner specified as 3 rotations (rad) followed by
						    3 translations rX rY rZ tx ty tz-->
						<transform>      -0.00000000       0.00000000      -0.00000000       0.00000000       0.00000000       0.00000000 </transform>
						<!--Whether to show a coordinate frame-->
						<show_axes> false </show_axes>
						<!--Display Pref. 0:Hide 1:Wire 3:Flat 4:Shaded Can be overriden for
						    individual geometries-->
						<display_preference> 4 </display_preference>
					</VisibleObject>
					<PathWrapSet name="">
						<objects/>
						<groups/>
					</PathWrapSet>
				</GeometryPath>
				<!--Scale factor for normalizing time-->
				<time_scale>       0.00000000 </time_scale>
				<!--Parameter used in time constant of ramping up of muscle force-->
				<activation1>       0.00000000 </activation1>
				<!--Parameter used in time constant of ramping up and ramping down of
				    muscle force-->
				<activation2>       0.00000000 </activation2>
				<!--Maximum isometric force that the fibers can generate-->
				<max_isometric_force>       0.00000000 </max_isometric_force>
				<!--Optimal length of the muscle fibers-->
				<optimal_fiber_length>       0.00000000 </optimal_fiber_length>
				<!--Resting length of the tendon-->
				<tendon_slack_length>       0.00000000 </tendon_slack_length>
				<!--Angle between tendon and fibers at optimal fiber length-->
				<pennation_angle>       0.00000000 </pennation_angle>
				<!--Maximum contraction velocity of the fibers, in optimal fiberlengths
				    per second-->
				<max_contraction_velocity>      10.00000000 </max_contraction_velocity>
				<!--Normalized mass of the muscle between the tendon and muscle fibers-->
				<mass>       0.00000000 </mass>
				<!--Function representing force-length behavior of tendon-->
				<tendon_force_length_curve>
					<NaturalCubicSpline name="">
						<x>      -1.00000000      -0.00200000      -0.00100000       0.00000000       0.00131000       0.00281000       0.00431000       0.00581000       0.00731000       0.00881000       0.01030000       0.01180000       0.01230000       9.20000000       9.20100000       9.20200000      12.00000000 </x>
						<y>       0.00000000       0.00000000       0.00000000       0.00000000       0.01080000       0.02570000       0.04350000       0.06520000       0.09150000       0.12300000       0.16100000       0.20800000       0.22700000     345.00000000     345.00000000     345.00000000     345.00000000 </y>
					</NaturalCubicSpline>
				</tendon_force_length_curve>
				<!--Function representing active force-length behavior of muscle fibers-->
				<active_force_length_curve>
					<NaturalCubicSpline name="">
						<x>       0.00000000       0.35100000       0.35200000       0.35350000       0.52725000       0.62875000       0.71875000       0.86125000       1.04500000       1.21750000       1.43875000       1.65000000       1.65100000       1.65200000       2.00000000 </x>
						<y>       0.00000000       0.00000000       0.00000000       0.00000000       0.22666700       0.63666700       0.85666700       0.95000000       0.99333300       0.77000000       0.24666700       0.00000000       0.00000000       0.00000000       0.00000000 </y>
					</NaturalCubicSpline>
				</active_force_length_curve>
				<!--Function representing passive force-length behavior of muscle fibers-->
				<passive_force_length_curve>
					<NaturalCubicSpline name="">
						<x>       0.50000000       0.80000000       0.99800000       0.99900000       1.00000000       1.10000000       1.20000000       1.30000000       1.40000000       1.50000000       1.60000000       1.60100000       1.60200000       2.00000000 </x>
						<y>       0.00000000       0.00090000       0.00660000       0.00670000       0.00670000       0.01830000       0.04980000       0.13530000       0.36790000       1.00000000       2.00000000       2.00000000       2.00000000       2.00000000 </y>
					</NaturalCubicSpline>
				</passive_force_length_curve>
				<!--Function representing force-velocity behavior of muscle fibers-->
				<force_velocity_curve>
					<NaturalCubicSpline name="">
						<x>      -1.00100000      -1.00000000      -0.95000000      -0.90000000      -0.85000000      -0.80000000      -0.75000000      -0.70000000      -0.65000000      -0.60000000      -0.55000000      -0.50000000      -0.45000000      -0.40000000      -0.35000000      -0.30000000      -0.25000000      -0.20000000      -0.15000000      -0.10000000      -0.05000000       0.00000000       0.05000000       0.10000000       0.15000000       0.20000000       0.25000000       0.30000000       0.35000000       0.40000000       0.45000000       0.50000000       0.55000000       0.60000000       0.65000000       0.70000000       0.75000000       0.80000000       0.85000000       0.90000000       0.95000000       1.00000000 </x>
						<y>       0.00000000       0.00000000       0.01041700       0.02173900       0.03409100       0.04761900       0.06250000       0.07894700       0.09722200       0.11764700       0.14062500       0.16666700       0.19642900       0.23076900       0.27083300       0.31818200       0.37500000       0.44444400       0.53125000       0.64285700       0.79166700       1.00000000       1.48201400       1.60157100       1.65579100       1.68673900       1.70675100       1.72075300       1.73109900       1.73905500       1.74536500       1.75049000       1.75473600       1.75831200       1.76136400       1.76399900       1.76629800       1.76832100       1.77011500       1.77171700       1.77315500       1.77445500 </y>
					</NaturalCubicSpline>
				</force_velocity_curve>
			</Delp1990Muscle>
			<CMC_Joint name="default">
				<!--Flag (true or false) indicating whether or not a task is on.-->
				<on> false </on>
				<!--Weight with which a task is tracked relative to other tasks. To track
				    a task more tightly, make the weight larger.-->
				<weight>       1.00000000       1.00000000       1.00000000 </weight>
				<!--Name of body frame with respect to which a tracking objective is
				    specified. The special name 'center_of_mass' refers to the system
				    center of mass. This property is not used for tracking joint angles.-->
				<wrt_body> -1 </wrt_body>
				<!--Name of body frame in which the tracking objectives are expressed.
				    This property is not used for tracking joint angles.-->
				<express_body> -1 </express_body>
				<!--Array of 3 flags (each true or false) specifying whether a component
				    of a task is active.  For example, tracking the trajectory of a point
				    in space could have three components (x,y,z).  This allows each of
				    those to be made active (true) or inactive (false).  A task for
				    tracking a joint coordinate only has one component.-->
				<active> false false false </active>
				<!--Position error feedback gain (stiffness). To achieve critical damping
				    of errors, choose kv = 2*sqrt(kp).-->
				<kp>       1.00000000       1.00000000       1.00000000 </kp>
				<!--Velocity error feedback gain (damping). To achieve critical damping of
				    errors, choose kv = 2*sqrt(kp).-->
				<kv>       1.00000000       1.00000000       1.00000000 </kv>
				<!--Feedforward acceleration gain.  This is normally set to 1.0, so no
				    gain.-->
				<ka>       1.00000000       1.00000000       1.00000000 </ka>
				<!--Direction vector[3] for component 0 of a task. Joint tasks do not use
				    this propery.-->
				<r0>       0.00000000       0.00000000       0.00000000 </r0>
				<!--Direction vector[3] for component 1 of a task. Joint tasks do not use
				    this property.-->
				<r1>       0.00000000       0.00000000       0.00000000 </r1>
				<!--Direction vector[3] for component 2 of a task. Joint tasks do not use
				    this property.-->
				<r2>       0.00000000       0.00000000       0.00000000 </r2>
				<!--Name of the coordinate to be tracked.-->
				<coordinate>  </coordinate>
				<!--Error limit on the tracking accuracy for this coordinate. If the
				    tracking errors approach this limit, the weighting for this coordinate
				    is increased.-->
				<limit>       0.00000000 </limit>
			</CMC_Joint>
		</defaults>
		<!--Mass of the subject in kg.  Subject-specific model generated by
		    scaling step will have this total mass.-->
		<mass>      80.46728644 </mass>
		<!--Height of the subject in mm.  For informational purposes only (not
		    used by scaling).-->
		<height>       0.00000000 </height>
		<!--Age of the subject in years.  For informational purposes only (not
		    used by scaling).-->
		<age>       0.00000000 </age>
		<!--Notes for the subject.-->
		<notes> Unassigned </notes>
		<!--Specifies the name of the unscaled model (.osim) and the marker set.-->
		<GenericModelMaker name="">
			<!--Model file (.osim) for the unscaled model.-->
			<model_file> Unassigned </model_file>
			<!--Set of model markers used to scale the model. Scaling is done based on
			    distances between model markers compared to the same distances between
			    the corresponding experimental markers.-->
			<marker_set_file> Unassigned </marker_set_file>
		</GenericModelMaker>
		<!--Specifies parameters for scaling the model.-->
		<ModelScaler name="">
			<!--Whether or not to use the model scaler during scale-->
			<apply> true </apply>
			<!--Specifies the scaling method and order. Valid options are
			    'measurements', 'manualScale', singly or both in any sequence.-->
			<scaling_order> measurements manualScale </scaling_order>
			<!--TRC file (.trc) containing the marker positions used for
			    measurement-based scaling. This is usually a static trial, but doesn't
			    need to be.  The marker-pair distances are computed for each time step
			    in the TRC file and averaged across the time range.-->
			<marker_file> ../ExportedData/Static_FJC.trc </marker_file>
			<!--Time range over which to average marker-pair distances in the marker
			    file (.trc) for measurement-based scaling.-->
			<time_range>       0.73000000       3.89000000 </time_range>
			<!--Flag (true or false) indicating whether or not to preserve relative
			    mass between segments.-->
			<preserve_mass_distribution> true </preserve_mass_distribution>
			<!--Name of SIMM joint file to write when done scaling. If not specified,
			    a file will not be written.-->
			<output_joint_file> Unassigned </output_joint_file>
			<!--Name of SIMM muscle file to write when done scaling. If not specified,
			    a file will not be written.-->
			<output_muscle_file> Unassigned </output_muscle_file>
			<!--Name of OpenSim model file (.osim) to write when done scaling.-->
			<output_model_file> Unassigned </output_model_file>
			<!--Name of file to write containing the scale factors that were applied
			    to the unscaled model (optional).-->
			<output_scale_file> subject02_scaleSet_applied.xml </output_scale_file>
			<!--Specifies the measurements by which body segments are to be scaled.-->
			<MeasurementSet name="subject02">
				<objects>
					<Measurement name="torso">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LPSH LPSI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LASH LASI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RPSH RPSI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RASH RASI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> C7 RASI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> C7 LASI </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="torso">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="pelvis_z">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LPSI RPSI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RASI LASI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RHJC LHJC </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="pelvis">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="thigh">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LHJC LLFC </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LHJC LMFC </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RHJC RMFC </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RHJC RLFC </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="femur_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="femur_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="shank">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LLFC LLMAL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LMFC LMMAL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RLFC RLMAL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RMFC RMMAL </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="tibia_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y </axes>
								</BodyScale>
								<BodyScale name="tibia_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="foot">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LCAL LMT5 </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LCAL LTOE </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RCAL RTOE </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RCAL RMT5 </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="talus_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="calcn_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="toes_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="talus_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="calcn_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="toes_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="humerus">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LACR LMEL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LACR LMEL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RACR RLEL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RACR RMEL </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="humerus_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="humerus_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="radius_ulna">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LLEL LFAradius </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LMEL LFAulna </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RMEL RFAulna </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RLEL RFAradius </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="ulna_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="radius_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="hand_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="ulna_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="radius_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
								<BodyScale name="hand_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X Y Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="pelvis_Y">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RASI RHJC </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LASI LHJC </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="pelvis">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> Y </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="pelvis_X">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RASI RPSI </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LASI LPSI </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="pelvis">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> X </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="shank width">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> true </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LLMAL LMMAL </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RLMAL RMMAL </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name="">
							<objects>
								<BodyScale name="tibia_r">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> Z </axes>
								</BodyScale>
								<BodyScale name="tibia_l">
									<!--Axes (X Y Z) along which to scale a body. For example, 'X Y Z' scales
									    along all three axes, and 'Y' scales just along the Y axis.-->
									<axes> Z </axes>
								</BodyScale>
							</objects>
						</BodyScaleSet>
					</Measurement>
					<Measurement name="thigh width">
						<!--Flag to turn on and off scaling for this measurement.-->
						<apply> false </apply>
						<!--Set of marker pairs used to determine the scale factors.-->
						<MarkerPairSet name="">
							<objects>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> LLFC LMFC </markers>
								</MarkerPair>
								<MarkerPair name="">
									<!--Names of two markers, the distance between which is used to compute a
									    body scale factor.-->
									<markers> RLFC RMFC </markers>
								</MarkerPair>
							</objects>
						</MarkerPairSet>
						<!--Set of bodies to be scaled by this measurement.-->
						<BodyScaleSet name=""/>
					</Measurement>
				</objects>
			</MeasurementSet>
			<!--Scale factors to be used for manual scaling.-->
			<ScaleSet name="subject02_Scale">
				<objects>
					<Scale name="">
						<scales>       1.11031000       1.11031000       1.11031000 </scales>
						<segment> femur_r </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       0.96209500       0.96209500       0.96209500 </scales>
						<segment> tibia_r </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       1.10000000       1.10000000       1.10000000 </scales>
						<segment> calcn_r </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       1.10000000       1.10000000       1.10000000 </scales>
						<segment> toes_r </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       1.11031000       1.11031000       1.11031000 </scales>
						<segment> femur_l </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       0.96209500       0.96209500       0.96209500 </scales>
						<segment> tibia_l </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       1.10000000       1.10000000       1.10000000 </scales>
						<segment> calcn_l </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       1.10000000       1.10000000       1.10000000 </scales>
						<segment> toes_l </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       0.95000000       0.95000000       0.95000000 </scales>
						<segment> humerus_r </segment>
						<apply> false </apply>
					</Scale>
					<Scale name="">
						<scales>       0.95000000       0.95000000       0.95000000 </scales>
						<segment> humerus_l </segment>
						<apply> false </apply>
					</Scale>
				</objects>
			</ScaleSet>
		</ModelScaler>
		<!--Specifies parameters for placing markers on the model once a model is
		    scaled.-->
		<MarkerPlacer name="">
			<!--Whether or not to use the marker placer during scale-->
			<apply> true </apply>
			<!--TRC file (.trc) containing the time history of experimental marker
			    positions (usually a static trial).-->
			<marker_file> ../ExportedData/Static_FJC.trc </marker_file>
			<!--Name of file containing the joint angles used to set the initial
			    configuration of the model for the purpose of placing the markers.
			    These coordinate values can also be included in the optimization
			    problem used to place the markers. Before the model markers are
			    placed, a single frame of an inverse kinematics (IK) problem is
			    solved. The IK problem can be solved simply by matching marker
			    positions, but if the model markers are not in the correct locations,
			    the IK solution will not be very good and neither will marker
			    placement. Alternatively, coordinate values (specified in this file)
			    can be specified and used to influence the IK solution. This is
			    valuable particularly if you have high confidence in the coordinate
			    values. For example, you know for the static trial the subject was
			    standing will all joint angles close to zero. If the coordinate set
			    (see the CoordinateSet property) contains non-zero weights for
			    coordinates, the IK solution will try to match not only the marker
			    positions, but also the coordinates in this file. Least-squared error
			    is used to solve the IK problem.-->
			<coordinate_file> Unassigned </coordinate_file>
			<!--Time range over which the marker positions are averaged.-->
			<time_range>       0.73000000       3.89000000 </time_range>
			<!--Name of the new SIMM Joint file (.jnt) after scaling and marker
			    placement (optional).-->
			<output_joint_file> Unassigned </output_joint_file>
			<!--Name of the SIMM muscle file (.msl) after scaling and marker placement
			    (optional).-->
			<output_muscle_file> Unassigned </output_muscle_file>
			<!--Name of the motion file (.mot) written after marker relocation
			    (optional).-->
			<output_motion_file> subject02_static_output.mot </output_motion_file>
			<!--Output OpenSim model file (.osim) after scaling and maker placement.-->
			<output_model_file> subject02_adjusted_scaled.osim </output_model_file>
			<!--Output marker set containing the new marker locations after markers
			    have been placed.-->
			<output_marker_file> Unassigned </output_marker_file>
			<!--Maximum amount of movement allowed in marker data when averaging
			    frames of the static trial. A negative value means there is not limit.-->
			<max_marker_movement>      -1.00000000 </max_marker_movement>
			<!--Preferred optimizer algorithm (currently support "ipopt" or "cfsqp",
			    the latter requiring the osimFSQP library.-->
			<optimizer_algorithm> ipopt </optimizer_algorithm>
			<!--Task set used to specify weights used in the IK computation of the
			    static pose.-->
			<IKTaskSet name="subject02_Scale">
				<objects>
					<IKMarkerTask name="RACR">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     250.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LACR">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     250.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="C7">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="CLAV">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      10.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RASH">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      10.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RPSH">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      10.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LASH">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      10.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LPSH">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      10.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RSJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RLEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RMEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RFAradius">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RFAulna">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LSJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LLEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LMEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LFAradius">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LFAulna">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      50.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RASI">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LASI">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RPSI">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LPSI">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LHJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1000.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RHJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1000.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RLFC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RMFC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RKJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     100.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RLMAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RMMAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RAJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     100.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RCAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RTOE">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="RMT5">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LLFC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LMFC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LKJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     100.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LLMAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LMMAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     500.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LAJC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>     100.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LCAL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LTOE">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="LMT5">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>      25.00000000 </weight>
					</IKMarkerTask>
					<IKCoordinateTask name="pelvis_tilt">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="pelvis_list">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="hip_flexion_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="hip_rotation_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="knee_angle_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="ankle_angle_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="hip_flexion_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="hip_rotation_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>      -0.08726646 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="knee_angle_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="ankle_angle_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="lumbar_bending">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       0.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="lumbar_rotation">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       0.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="arm_flex_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="arm_rot_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="elbow_flex_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.08726646 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="pro_sup_r">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       1.57079633 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="arm_flex_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="arm_rot_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.00000000 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="elbow_flex_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> default_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       0.08726646 </value>
					</IKCoordinateTask>
					<IKCoordinateTask name="pro_sup_l">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> false </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
						<!--Indicates the source of the coordinate value for this task.  Possible
						    values are default_value (use default value of coordinate, as
						    specified in the model file, as the fixed target value), manual_value
						    (use the value specified in the value property of this task as the
						    fixed target value), or from_file (use the coordinate values from the
						    coordinate data specified by the coordinates_file property).-->
						<value_type> manual_value </value_type>
						<!--This value will be used as the desired (or prescribed) coordinate
						    value if value_type is set to manual_value.-->
						<value>       1.57079633 </value>
					</IKCoordinateTask>
				</objects>
			</IKTaskSet>
		</MarkerPlacer>
	</ScaleTool>
</OpenSimDocument>

